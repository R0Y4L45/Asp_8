@model CartSummaryViewModel

<div style="margin-left:-200px !important; z-index:1; width:300px;" class="dropdown-menu dropdown-menu2">
    <ul class="list-group">
        <li class="list-group-item d-flex">
            <table>
                <thead>
                    <tr>
                        <th class="text-center">Name of Books</th>
                        <th class="text-center">Count</th>
                        <th class="text-center">Remove</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var item in Model.Cart!.CartLines)
                    {
                        <tr id="tr @item?.Book?.Id">
                            <td class="text-center">
                                <span class="text-center">@item?.Book?.Name</span>
                            </td>
                            <td class="text-center">
                                <div class="input-group">
                                    <button type="button" id="m @item?.Book!.Id" class="btn btn-danger btn-number" onclick="minus(@item?.Book!.Id, @item!.Book!.Price)">-</button>
                                    <input type="number" id="@item.Book.Id" readonly class="form-control input-number myInput text-center" value="@item.Quantity" max="@item?.Book?.Count" />
                                    <button type="button" id="p @item?.Book.Id" class="btn btn-success btn-number" onclick="plus(@item?.Book!.Id, @item?.Book.Price)">+</button>
                                </div>
                            </td>
                            <td class="text-center">
                                <a class="text-muted font-size-18 px-2" href="/User/BookStore/Remove?id=@item?.Book.Id">
                                    <i class=\"bx bx-dots-vertical-rounded\">
                                        <svg xmlns="http://www.w3.org/2000/svg" x="0px" y="0px" width="30" viewBox="0 0 100 100">
                                            <path fill="#f37e98" d="M25,30l3.645,47.383C28.845,79.988,31.017,82,33.63,82h32.74c2.613,0,4.785-2.012,4.985-4.617L75,30"></path>
                                            <path fill="#f15b6c" d="M65 38v35c0 1.65-1.35 3-3 3s-3-1.35-3-3V38c0-1.65 1.35-3 3-3S65 36.35 65 38zM53 38v35c0 1.65-1.35 3-3 3s-3-1.35-3-3V38c0-1.65 1.35-3 3-3S53 36.35 53 38zM41 38v35c0 1.65-1.35 3-3 3s-3-1.35-3-3V38c0-1.65 1.35-3 3-3S41 36.35 41 38zM77 24h-4l-1.835-3.058C70.442 19.737 69.14 19 67.735 19h-35.47c-1.405 0-2.707.737-3.43 1.942L27 24h-4c-1.657 0-3 1.343-3 3s1.343 3 3 3h54c1.657 0 3-1.343 3-3S78.657 24 77 24z"></path>
                                            <path fill="#1f212b" d="M66.37 83H33.63c-3.116 0-5.744-2.434-5.982-5.54l-3.645-47.383 1.994-.154 3.645 47.384C29.801 79.378 31.553 81 33.63 81H66.37c2.077 0 3.829-1.622 3.988-3.692l3.645-47.385 1.994.154-3.645 47.384C72.113 80.566 69.485 83 66.37 83zM56 20c-.552 0-1-.447-1-1v-3c0-.552-.449-1-1-1h-8c-.551 0-1 .448-1 1v3c0 .553-.448 1-1 1s-1-.447-1-1v-3c0-1.654 1.346-3 3-3h8c1.654 0 3 1.346 3 3v3C57 19.553 56.552 20 56 20z"></path>
                                            <path fill="#1f212b" d="M77,31H23c-2.206,0-4-1.794-4-4s1.794-4,4-4h3.434l1.543-2.572C28.875,18.931,30.518,18,32.265,18h35.471c1.747,0,3.389,0.931,4.287,2.428L73.566,23H77c2.206,0,4,1.794,4,4S79.206,31,77,31z M23,25c-1.103,0-2,0.897-2,2s0.897,2,2,2h54c1.103,0,2-0.897,2-2s-0.897-2-2-2h-4c-0.351,0-0.677-0.185-0.857-0.485l-1.835-3.058C69.769,20.559,68.783,20,67.735,20H32.265c-1.048,0-2.033,0.559-2.572,1.457l-1.835,3.058C27.677,24.815,27.351,25,27,25H23z"></path>
                                            <path fill="#1f212b" d="M61.5 25h-36c-.276 0-.5-.224-.5-.5s.224-.5.5-.5h36c.276 0 .5.224.5.5S61.776 25 61.5 25zM73.5 25h-5c-.276 0-.5-.224-.5-.5s.224-.5.5-.5h5c.276 0 .5.224.5.5S73.776 25 73.5 25zM66.5 25h-2c-.276 0-.5-.224-.5-.5s.224-.5.5-.5h2c.276 0 .5.224.5.5S66.776 25 66.5 25zM50 76c-1.654 0-3-1.346-3-3V38c0-1.654 1.346-3 3-3s3 1.346 3 3v25.5c0 .276-.224.5-.5.5S52 63.776 52 63.5V38c0-1.103-.897-2-2-2s-2 .897-2 2v35c0 1.103.897 2 2 2s2-.897 2-2v-3.5c0-.276.224-.5.5-.5s.5.224.5.5V73C53 74.654 51.654 76 50 76zM62 76c-1.654 0-3-1.346-3-3V47.5c0-.276.224-.5.5-.5s.5.224.5.5V73c0 1.103.897 2 2 2s2-.897 2-2V38c0-1.103-.897-2-2-2s-2 .897-2 2v1.5c0 .276-.224.5-.5.5S59 39.776 59 39.5V38c0-1.654 1.346-3 3-3s3 1.346 3 3v35C65 74.654 63.654 76 62 76z"></path>
                                            <path fill="#1f212b" d="M59.5 45c-.276 0-.5-.224-.5-.5v-2c0-.276.224-.5.5-.5s.5.224.5.5v2C60 44.776 59.776 45 59.5 45zM38 76c-1.654 0-3-1.346-3-3V38c0-1.654 1.346-3 3-3s3 1.346 3 3v35C41 74.654 39.654 76 38 76zM38 36c-1.103 0-2 .897-2 2v35c0 1.103.897 2 2 2s2-.897 2-2V38C40 36.897 39.103 36 38 36z"></path>
                                        </svg>
                                    </i>
                                </a>
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        </li>
    </ul>
    <div class="card-body">
        <h5 id="h5" class="card-title">Total => @Model.Cart.Total Azn</h5>
        <button class="btn btn-primary" onclick="totalOnClick()">
            <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-cart" viewBox="0 0 16 16">
                <path d="M0 1.5A.5.5 0 0 1 .5 1H2a.5.5 0 0 1 .485.379L2.89 3H14.5a.5.5 0 0 1 .491.592l-1.5 8A.5.5 0 0 1 13 12H4a.5.5 0 0 1-.491-.408L2.01 3.607 1.61 2H.5a.5.5 0 0 1-.5-.5zM3.102 4l1.313 7h8.17l1.313-7H3.102zM5 12a2 2 0 1 0 0 4 2 2 0 0 0 0-4zm7 0a2 2 0 1 0 0 4 2 2 0 0 0 0-4zm-7 1a1 1 0 1 1 0 2 1 1 0 0 1 0-2zm7 0a1 1 0 1 1 0 2 1 1 0 0 1 0-2z" />
            </svg>
            Go to cart details
        </button>
    </div>
</div>

<script>
    const input = document.querySelectorAll("input");
    const h5 = document.querySelector("h5");

    function minus(id, price) {
        const i = document.getElementById(id);
        let total = h5.innerHTML.split(' ')[2], temp;

        if (+i.value > 1) {
            --i.value;
            temp = (+total - +price).toFixed(2);
            h5.innerHTML = 'Total => ' + temp + ' Azn';

            const model = id + ' ' + '-' + i.value, dataToSend = JSON.stringify(model);
            SendToController(dataToSend);
        }
    }

    function plus(id, price) {
        const i = document.getElementById(id);
        let total = h5.innerHTML.split(' ')[2], temp;

        if (+i.value < +i.max) {
            ++i.value;
            temp = (+total + +price).toFixed(2);
            h5.innerHTML = 'Total => ' + temp + ' Azn';

            const model = id + ' ' + i.value, dataToSend = JSON.stringify(model);
            SendToController(dataToSend);
        }
    }

    function SendToController(dataToSend) {
        fetch('User/Plus_Minus', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json'
            },
            body: dataToSend
        });
    }

    function totalOnClick() {
        const total = h5.innerHTML.split(' ')[2], dataToSend = JSON.stringify(total);

        fetch('User/MyData', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json'
            },
            body: dataToSend
        })
    }
</script>